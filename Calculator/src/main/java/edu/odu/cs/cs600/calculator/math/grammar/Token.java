package edu.odu.cs.cs600.calculator.math.grammar;

/**
 * Base Token class.  Generated by the Lexer and consumed by the Parser.
 * 
 * Taken from: https://github.com/munificent/bantam/blob/master/src/com/stuffwithstuff/bantam/Token.java
 * Write-up: http://journal.stuffwithstuff.com/2011/03/19/pratt-parsers-expression-parsing-made-easy/
 */
public final class Token {
	private final TokenType tokenType;
	private final String lexeme;
	
	
	/**
	 * Constructor
	 * @param tokenType The {@link TokenType} to attribute to this Token
	 * @param lexeme The {@link String} value of the lexeme representing this Token
	 */
	public Token(TokenType tokenType, String lexeme) {
		this.tokenType = tokenType;
		this.lexeme = lexeme;
	}
	
	
	/**
	 * @return The {@link TokenType} of this Token
	 */
	public TokenType getTokenType() {
		return tokenType;
	}
	
	
	/**
	 * @return The {@link String} value of the lexeme representing this Token
	 */
	public String getLexeme() {
		return lexeme;
	}
}